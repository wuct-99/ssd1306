ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB132:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.</center></h2>
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****  * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****  * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****  *
  17:Core/Src/main.c ****  ******************************************************************************
  18:Core/Src/main.c ****  */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** #include "spi.h"
  25:Core/Src/main.c **** #include "usart.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "ssd1306.h"
  30:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PD */
  39:Core/Src/main.c **** /* USER CODE END PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PM */
  43:Core/Src/main.c **** #define spi_cs GPIOC, GPIO_PIN_5
  44:Core/Src/main.c **** #define spi_dc GPIOC, GPIO_PIN_4
  45:Core/Src/main.c **** #define spi_res GPIOA, GPIO_PIN_6
  46:Core/Src/main.c **** #define spi_d1 GPIOA, GPIO_PIN_7
  47:Core/Src/main.c **** #define spi_d0 GPIOA, GPIO_PIN_5
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****  * @brief  The application entry point.
  70:Core/Src/main.c ****  * @retval int
  71:Core/Src/main.c ****  */
  72:Core/Src/main.c **** int main(void)
  73:Core/Src/main.c **** {
  74:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****     /* USER CODE END 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****     /* MCU Configuration--------------------------------------------------------*/
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****     /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  81:Core/Src/main.c ****     HAL_Init();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****     /* USER CODE BEGIN Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****     /* USER CODE END Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****     /* Configure the system clock */
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 3


  88:Core/Src/main.c ****     SystemClock_Config();
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****     /* USER CODE BEGIN SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****     /* USER CODE END SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****     /* Initialize all configured peripherals */
  95:Core/Src/main.c ****     MX_GPIO_Init();
  96:Core/Src/main.c ****     MX_SPI1_Init();
  97:Core/Src/main.c ****     MX_USART2_UART_Init();
  98:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, 1);
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, 1);
 102:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, 1);
 103:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, 1);
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     ssd1306_init();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****     fill_white();
 108:Core/Src/main.c ****     HAL_Delay(2000);
 109:Core/Src/main.c ****     clean_screen();
 110:Core/Src/main.c ****     HAL_Delay(2000);
 111:Core/Src/main.c ****     oled_print();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****     uint16_t ticks = HAL_GetTick();
 114:Core/Src/main.c ****     /* USER CODE END 2 */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     /* Infinite loop */
 117:Core/Src/main.c ****     /* USER CODE BEGIN WHILE */
 118:Core/Src/main.c ****     while (1)
 119:Core/Src/main.c ****     {
 120:Core/Src/main.c ****         /* USER CODE END WHILE */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****         /* USER CODE BEGIN 3 */
 123:Core/Src/main.c ****         if (HAL_GetTick() - ticks > 1000)
 124:Core/Src/main.c ****         {
 125:Core/Src/main.c ****             HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 126:Core/Src/main.c ****             ticks = HAL_GetTick();
 127:Core/Src/main.c ****         }
 128:Core/Src/main.c ****     }
 129:Core/Src/main.c ****     /* USER CODE END 3 */
 130:Core/Src/main.c **** }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c **** /**
 133:Core/Src/main.c ****  * @brief System Clock Configuration
 134:Core/Src/main.c ****  * @retval None
 135:Core/Src/main.c ****  */
 136:Core/Src/main.c **** void SystemClock_Config(void)
 137:Core/Src/main.c **** {
 138:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 139:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     /** Configure the main internal regulator output voltage
 142:Core/Src/main.c ****      */
 143:Core/Src/main.c ****     __HAL_RCC_PWR_CLK_ENABLE();
 144:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 4


 145:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 146:Core/Src/main.c ****      * in the RCC_OscInitTypeDef structure.
 147:Core/Src/main.c ****      */
 148:Core/Src/main.c ****     RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 149:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 150:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 151:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 152:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 4;
 153:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 64;
 154:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 155:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = 4;
 156:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 157:Core/Src/main.c ****     {
 158:Core/Src/main.c ****         Error_Handler();
 159:Core/Src/main.c ****     }
 160:Core/Src/main.c ****     /** Initializes the CPU, AHB and APB buses clocks
 161:Core/Src/main.c ****      */
 162:Core/Src/main.c ****     RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 |
 163:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 164:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 165:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 166:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****     if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 169:Core/Src/main.c ****     {
 170:Core/Src/main.c ****         Error_Handler();
 171:Core/Src/main.c ****     }
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** /* USER CODE END 4 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** /**
 179:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 180:Core/Src/main.c ****  * @retval None
 181:Core/Src/main.c ****  */
 182:Core/Src/main.c **** void Error_Handler(void)
 183:Core/Src/main.c **** {
  29              		.loc 1 183 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 184:Core/Src/main.c ****     /* USER CODE BEGIN Error_Handler_Debug */
 185:Core/Src/main.c ****     /* User can add his own implementation to report the HAL error return state */
 186:Core/Src/main.c ****     __disable_irq();
  35              		.loc 1 186 5 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 5


   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 6


  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 7


 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 187:Core/Src/main.c ****     while (1)
  51              		.loc 1 187 5 discriminator 1 view .LVU4
 188:Core/Src/main.c ****     {
 189:Core/Src/main.c ****     }
  52              		.loc 1 189 5 discriminator 1 view .LVU5
 187:Core/Src/main.c ****     while (1)
  53              		.loc 1 187 11 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE132:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	SystemClock_Config:
  67              	.LFB131:
 137:Core/Src/main.c ****     RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68              		.loc 1 137 1 view -0
  69              		.cfi_startproc
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 8


  70              		@ args = 0, pretend = 0, frame = 80
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 00B5     		push	{lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 14, -4
  76 0002 95B0     		sub	sp, sp, #84
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 88
 138:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 138 5 view .LVU8
 138:Core/Src/main.c ****     RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  80              		.loc 1 138 24 is_stmt 0 view .LVU9
  81 0004 3022     		movs	r2, #48
  82 0006 0021     		movs	r1, #0
  83 0008 08A8     		add	r0, sp, #32
  84 000a FFF7FEFF 		bl	memset
  85              	.LVL0:
 139:Core/Src/main.c **** 
  86              		.loc 1 139 5 is_stmt 1 view .LVU10
 139:Core/Src/main.c **** 
  87              		.loc 1 139 24 is_stmt 0 view .LVU11
  88 000e 0023     		movs	r3, #0
  89 0010 0393     		str	r3, [sp, #12]
  90 0012 0493     		str	r3, [sp, #16]
  91 0014 0593     		str	r3, [sp, #20]
  92 0016 0693     		str	r3, [sp, #24]
  93 0018 0793     		str	r3, [sp, #28]
 143:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  94              		.loc 1 143 5 is_stmt 1 view .LVU12
  95              	.LBB6:
 143:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  96              		.loc 1 143 5 view .LVU13
  97 001a 0193     		str	r3, [sp, #4]
 143:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  98              		.loc 1 143 5 view .LVU14
  99 001c 1E4A     		ldr	r2, .L9
 100 001e 116C     		ldr	r1, [r2, #64]
 101 0020 41F08051 		orr	r1, r1, #268435456
 102 0024 1164     		str	r1, [r2, #64]
 143:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 103              		.loc 1 143 5 view .LVU15
 104 0026 126C     		ldr	r2, [r2, #64]
 105 0028 02F08052 		and	r2, r2, #268435456
 106 002c 0192     		str	r2, [sp, #4]
 143:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 107              		.loc 1 143 5 view .LVU16
 108 002e 019A     		ldr	r2, [sp, #4]
 109              	.LBE6:
 143:Core/Src/main.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 110              		.loc 1 143 5 view .LVU17
 144:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 111              		.loc 1 144 5 view .LVU18
 112              	.LBB7:
 144:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 113              		.loc 1 144 5 view .LVU19
 114 0030 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 9


 144:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 115              		.loc 1 144 5 view .LVU20
 116 0032 1A4B     		ldr	r3, .L9+4
 117 0034 1A68     		ldr	r2, [r3]
 118 0036 42F48042 		orr	r2, r2, #16384
 119 003a 1A60     		str	r2, [r3]
 144:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 120              		.loc 1 144 5 view .LVU21
 121 003c 1B68     		ldr	r3, [r3]
 122 003e 03F48043 		and	r3, r3, #16384
 123 0042 0293     		str	r3, [sp, #8]
 144:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 124              		.loc 1 144 5 view .LVU22
 125 0044 029B     		ldr	r3, [sp, #8]
 126              	.LBE7:
 144:Core/Src/main.c ****     /** Initializes the RCC Oscillators according to the specified parameters
 127              		.loc 1 144 5 view .LVU23
 148:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 128              		.loc 1 148 5 view .LVU24
 148:Core/Src/main.c ****     RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 129              		.loc 1 148 38 is_stmt 0 view .LVU25
 130 0046 0123     		movs	r3, #1
 131 0048 0893     		str	r3, [sp, #32]
 149:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132              		.loc 1 149 5 is_stmt 1 view .LVU26
 149:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 133              		.loc 1 149 32 is_stmt 0 view .LVU27
 134 004a 4FF48033 		mov	r3, #65536
 135 004e 0993     		str	r3, [sp, #36]
 150:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 136              		.loc 1 150 5 is_stmt 1 view .LVU28
 150:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 137              		.loc 1 150 36 is_stmt 0 view .LVU29
 138 0050 0222     		movs	r2, #2
 139 0052 0E92     		str	r2, [sp, #56]
 151:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 4;
 140              		.loc 1 151 5 is_stmt 1 view .LVU30
 151:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLM = 4;
 141              		.loc 1 151 37 is_stmt 0 view .LVU31
 142 0054 4FF48003 		mov	r3, #4194304
 143 0058 0F93     		str	r3, [sp, #60]
 152:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 64;
 144              		.loc 1 152 5 is_stmt 1 view .LVU32
 152:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLN = 64;
 145              		.loc 1 152 32 is_stmt 0 view .LVU33
 146 005a 0423     		movs	r3, #4
 147 005c 1093     		str	r3, [sp, #64]
 153:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 148              		.loc 1 153 5 is_stmt 1 view .LVU34
 153:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 149              		.loc 1 153 32 is_stmt 0 view .LVU35
 150 005e 4021     		movs	r1, #64
 151 0060 1191     		str	r1, [sp, #68]
 154:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = 4;
 152              		.loc 1 154 5 is_stmt 1 view .LVU36
 154:Core/Src/main.c ****     RCC_OscInitStruct.PLL.PLLQ = 4;
 153              		.loc 1 154 32 is_stmt 0 view .LVU37
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 10


 154 0062 1292     		str	r2, [sp, #72]
 155:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 155              		.loc 1 155 5 is_stmt 1 view .LVU38
 155:Core/Src/main.c ****     if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 156              		.loc 1 155 32 is_stmt 0 view .LVU39
 157 0064 1393     		str	r3, [sp, #76]
 156:Core/Src/main.c ****     {
 158              		.loc 1 156 5 is_stmt 1 view .LVU40
 156:Core/Src/main.c ****     {
 159              		.loc 1 156 9 is_stmt 0 view .LVU41
 160 0066 08A8     		add	r0, sp, #32
 161 0068 FFF7FEFF 		bl	HAL_RCC_OscConfig
 162              	.LVL1:
 156:Core/Src/main.c ****     {
 163              		.loc 1 156 8 view .LVU42
 164 006c 80B9     		cbnz	r0, .L7
 162:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 165              		.loc 1 162 5 is_stmt 1 view .LVU43
 162:Core/Src/main.c ****     RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 166              		.loc 1 162 33 is_stmt 0 view .LVU44
 167 006e 0F23     		movs	r3, #15
 168 0070 0393     		str	r3, [sp, #12]
 163:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 169              		.loc 1 163 5 is_stmt 1 view .LVU45
 163:Core/Src/main.c ****     RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 170              		.loc 1 163 36 is_stmt 0 view .LVU46
 171 0072 0221     		movs	r1, #2
 172 0074 0491     		str	r1, [sp, #16]
 164:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 173              		.loc 1 164 5 is_stmt 1 view .LVU47
 164:Core/Src/main.c ****     RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 174              		.loc 1 164 37 is_stmt 0 view .LVU48
 175 0076 0023     		movs	r3, #0
 176 0078 0593     		str	r3, [sp, #20]
 165:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 177              		.loc 1 165 5 is_stmt 1 view .LVU49
 165:Core/Src/main.c ****     RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 178              		.loc 1 165 38 is_stmt 0 view .LVU50
 179 007a 4FF48052 		mov	r2, #4096
 180 007e 0692     		str	r2, [sp, #24]
 166:Core/Src/main.c **** 
 181              		.loc 1 166 5 is_stmt 1 view .LVU51
 166:Core/Src/main.c **** 
 182              		.loc 1 166 38 is_stmt 0 view .LVU52
 183 0080 0793     		str	r3, [sp, #28]
 168:Core/Src/main.c ****     {
 184              		.loc 1 168 5 is_stmt 1 view .LVU53
 168:Core/Src/main.c ****     {
 185              		.loc 1 168 9 is_stmt 0 view .LVU54
 186 0082 03A8     		add	r0, sp, #12
 187 0084 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 188              	.LVL2:
 168:Core/Src/main.c ****     {
 189              		.loc 1 168 8 view .LVU55
 190 0088 20B9     		cbnz	r0, .L8
 172:Core/Src/main.c **** 
 191              		.loc 1 172 1 view .LVU56
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 11


 192 008a 15B0     		add	sp, sp, #84
 193              	.LCFI2:
 194              		.cfi_remember_state
 195              		.cfi_def_cfa_offset 4
 196              		@ sp needed
 197 008c 5DF804FB 		ldr	pc, [sp], #4
 198              	.L7:
 199              	.LCFI3:
 200              		.cfi_restore_state
 158:Core/Src/main.c ****     }
 201              		.loc 1 158 9 is_stmt 1 view .LVU57
 202 0090 FFF7FEFF 		bl	Error_Handler
 203              	.LVL3:
 204              	.L8:
 170:Core/Src/main.c ****     }
 205              		.loc 1 170 9 view .LVU58
 206 0094 FFF7FEFF 		bl	Error_Handler
 207              	.LVL4:
 208              	.L10:
 209              		.align	2
 210              	.L9:
 211 0098 00380240 		.word	1073887232
 212 009c 00700040 		.word	1073770496
 213              		.cfi_endproc
 214              	.LFE131:
 216              		.section	.text.main,"ax",%progbits
 217              		.align	1
 218              		.global	main
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu fpv4-sp-d16
 224              	main:
 225              	.LFB130:
  73:Core/Src/main.c ****     /* USER CODE BEGIN 1 */
 226              		.loc 1 73 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230 0000 10B5     		push	{r4, lr}
 231              	.LCFI4:
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 4, -8
 234              		.cfi_offset 14, -4
  81:Core/Src/main.c **** 
 235              		.loc 1 81 5 view .LVU60
 236 0002 FFF7FEFF 		bl	HAL_Init
 237              	.LVL5:
  88:Core/Src/main.c **** 
 238              		.loc 1 88 5 view .LVU61
 239 0006 FFF7FEFF 		bl	SystemClock_Config
 240              	.LVL6:
  95:Core/Src/main.c ****     MX_SPI1_Init();
 241              		.loc 1 95 5 view .LVU62
 242 000a FFF7FEFF 		bl	MX_GPIO_Init
 243              	.LVL7:
  96:Core/Src/main.c ****     MX_USART2_UART_Init();
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 12


 244              		.loc 1 96 5 view .LVU63
 245 000e FFF7FEFF 		bl	MX_SPI1_Init
 246              	.LVL8:
  97:Core/Src/main.c ****     /* USER CODE BEGIN 2 */
 247              		.loc 1 97 5 view .LVU64
 248 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 249              	.LVL9:
 100:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, 1);
 250              		.loc 1 100 5 view .LVU65
 251 0016 1B4C     		ldr	r4, .L15
 252 0018 0122     		movs	r2, #1
 253 001a 8021     		movs	r1, #128
 254 001c 2046     		mov	r0, r4
 255 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 256              	.LVL10:
 101:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, 1);
 257              		.loc 1 101 5 view .LVU66
 258 0022 0122     		movs	r2, #1
 259 0024 4021     		movs	r1, #64
 260 0026 2046     		mov	r0, r4
 261 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 262              	.LVL11:
 102:Core/Src/main.c ****     HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4, 1);
 263              		.loc 1 102 5 view .LVU67
 264 002c 0122     		movs	r2, #1
 265 002e 2021     		movs	r1, #32
 266 0030 2046     		mov	r0, r4
 267 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 268              	.LVL12:
 103:Core/Src/main.c **** 
 269              		.loc 1 103 5 view .LVU68
 270 0036 0122     		movs	r2, #1
 271 0038 1021     		movs	r1, #16
 272 003a 2046     		mov	r0, r4
 273 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 274              	.LVL13:
 105:Core/Src/main.c **** 
 275              		.loc 1 105 5 view .LVU69
 276 0040 FFF7FEFF 		bl	ssd1306_init
 277              	.LVL14:
 107:Core/Src/main.c ****     HAL_Delay(2000);
 278              		.loc 1 107 5 view .LVU70
 279 0044 FFF7FEFF 		bl	fill_white
 280              	.LVL15:
 108:Core/Src/main.c ****     clean_screen();
 281              		.loc 1 108 5 view .LVU71
 282 0048 4FF4FA60 		mov	r0, #2000
 283 004c FFF7FEFF 		bl	HAL_Delay
 284              	.LVL16:
 109:Core/Src/main.c ****     HAL_Delay(2000);
 285              		.loc 1 109 5 view .LVU72
 286 0050 FFF7FEFF 		bl	clean_screen
 287              	.LVL17:
 110:Core/Src/main.c ****     oled_print();
 288              		.loc 1 110 5 view .LVU73
 289 0054 4FF4FA60 		mov	r0, #2000
 290 0058 FFF7FEFF 		bl	HAL_Delay
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 13


 291              	.LVL18:
 111:Core/Src/main.c **** 
 292              		.loc 1 111 5 view .LVU74
 293 005c FFF7FEFF 		bl	oled_print
 294              	.LVL19:
 113:Core/Src/main.c ****     /* USER CODE END 2 */
 295              		.loc 1 113 5 view .LVU75
 113:Core/Src/main.c ****     /* USER CODE END 2 */
 296              		.loc 1 113 22 is_stmt 0 view .LVU76
 297 0060 FFF7FEFF 		bl	HAL_GetTick
 298              	.LVL20:
 113:Core/Src/main.c ****     /* USER CODE END 2 */
 299              		.loc 1 113 14 view .LVU77
 300 0064 84B2     		uxth	r4, r0
 301              	.LVL21:
 302              	.L12:
 118:Core/Src/main.c ****     {
 303              		.loc 1 118 5 is_stmt 1 view .LVU78
 123:Core/Src/main.c ****         {
 304              		.loc 1 123 9 view .LVU79
 123:Core/Src/main.c ****         {
 305              		.loc 1 123 13 is_stmt 0 view .LVU80
 306 0066 FFF7FEFF 		bl	HAL_GetTick
 307              	.LVL22:
 123:Core/Src/main.c ****         {
 308              		.loc 1 123 27 view .LVU81
 309 006a 001B     		subs	r0, r0, r4
 123:Core/Src/main.c ****         {
 310              		.loc 1 123 12 view .LVU82
 311 006c B0F57A7F 		cmp	r0, #1000
 312 0070 F9D9     		bls	.L12
 125:Core/Src/main.c ****             ticks = HAL_GetTick();
 313              		.loc 1 125 13 is_stmt 1 view .LVU83
 314 0072 8021     		movs	r1, #128
 315 0074 0348     		ldr	r0, .L15
 316 0076 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 317              	.LVL23:
 126:Core/Src/main.c ****         }
 318              		.loc 1 126 13 view .LVU84
 126:Core/Src/main.c ****         }
 319              		.loc 1 126 21 is_stmt 0 view .LVU85
 320 007a FFF7FEFF 		bl	HAL_GetTick
 321              	.LVL24:
 126:Core/Src/main.c ****         }
 322              		.loc 1 126 19 view .LVU86
 323 007e 84B2     		uxth	r4, r0
 324              	.LVL25:
 126:Core/Src/main.c ****         }
 325              		.loc 1 126 19 view .LVU87
 326 0080 F1E7     		b	.L12
 327              	.L16:
 328 0082 00BF     		.align	2
 329              	.L15:
 330 0084 00040240 		.word	1073873920
 331              		.cfi_endproc
 332              	.LFE130:
 334              		.text
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 14


 335              	.Letext0:
 336              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 337              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 338              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 339              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 340              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 341              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 342              		.file 9 "Core/Inc/gpio.h"
 343              		.file 10 "Core/Inc/spi.h"
 344              		.file 11 "Core/Inc/usart.h"
 345              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 346              		.file 13 "Core/ssd1306/ssd1306.h"
 347              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 348              		.file 15 "<built-in>"
ARM GAS  C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s:18     .text.Error_Handler:00000000 $t
C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s:26     .text.Error_Handler:00000000 Error_Handler
C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s:59     .text.SystemClock_Config:00000000 $t
C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s:66     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s:211    .text.SystemClock_Config:00000098 $d
C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s:217    .text.main:00000000 $t
C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s:224    .text.main:00000000 main
C:\Users\wucha\AppData\Local\Temp\cc6Pnd0J.s:330    .text.main:00000084 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_SPI1_Init
MX_USART2_UART_Init
HAL_GPIO_WritePin
ssd1306_init
fill_white
HAL_Delay
clean_screen
oled_print
HAL_GetTick
HAL_GPIO_TogglePin
